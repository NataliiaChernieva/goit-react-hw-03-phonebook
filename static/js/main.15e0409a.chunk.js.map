{"version":3,"sources":["components/Container/Container.styled.jsx","components/Form/Form.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Input/Input.styled.jsx","components/Input/Input.jsx","components/Form/Form.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Container","styled","div","Title","h1","SectionTitle","h2","CustomForm","form","CustomButton","button","Button","text","type","onClick","CurrentInput","input","CurrentLabel","label","Input","name","onChange","Form","state","number","handleSetInfo","e","target","value","setState","handleAddContact","preventDefault","props","handleSubmit","reset","onSubmit","this","pattern","title","required","Component","ContactItem","li","ContactListItem","handleDelete","ContactList","contacts","onDeleteContact","map","id","App","filter","formSubmitHandle","contact","uuidv4","find","savedContact","alert","prevState","console","log","contactId","changeFilter","getFilteredContacts","normaliseFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15e0409a.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 400px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 5px;\r\n  padding: 30px;\r\n  margin-left:auto;\r\n  margin-right: auto;\r\n  margin-top:30px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n   display: block;\r\n   font-size: 26px;\r\n   font-weight: 800;\r\n   text-align: center;\r\n   text-transform: uppercase;\r\n   margin-bottom: 10px;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n   display: block;\r\n   font-size: 20px;\r\n   font-weight: 800;\r\n   text-align: center;\r\n  text-transform: uppercase;\r\n  margin-top:30px;\r\n   margin-bottom:10px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const CustomForm = styled.form`\r\npadding: 0px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const CustomButton = styled.button`\r\n  background-color: #ff6b0a;\r\n  border: none;\r\n  border-radius:5px;\r\n  outline: none;\r\n  padding: 3px 12px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n`;","import React from \"react\";\r\n// import PropTypes from 'prop-types';\r\nimport { CustomButton } from \"./Button.styled\";\r\n\r\nfunction Button({ text, type, onClick }) {\r\n  return <CustomButton type={type} onClick={onClick}>{text}</CustomButton>;\r\n}\r\n\r\n// Button.PropTypes = {\r\n//   text: PropTypes.string.isRequired,\r\n//   type: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default Button;","import styled from '@emotion/styled';\r\n\r\nexport const CurrentInput = styled.input`\r\ndisplay:block;\r\nmargin-top: 6px;\r\nmargin-bottom: 20px`;\r\n\r\nexport const CurrentLabel = styled.label`\r\ntext-transform:capitalize;\r\nfont-weight:500;`;","import PropTypes from 'prop-types';\r\nimport { CurrentInput, CurrentLabel } from './Input.styled';\r\n\r\nexport default function Input({type, name, onChange}) {\r\n  return(\r\n    <CurrentLabel>{name}\r\n      <CurrentInput\r\n        type={type}\r\n        name={name}\r\n        onChange={onChange}\r\n      />\r\n    </CurrentLabel>\r\n  )  \r\n}\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n}\r\n","import React from \"react\";\r\nimport { CustomForm } from './Form.styled';\r\nimport Button from '../Button/Button';\r\nimport Input from '../Input/Input'\r\n\r\nimport { Component } from 'react';\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleSetInfo =(e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({ [name]: value });\r\n    //   console.log(this.state);\r\n    };\r\n\r\n    handleAddContact = e => {\r\n        e.preventDefault();\r\n      \r\n        this.props.handleSubmit(this.state);\r\n        // console.log('Стейт формы>', this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number:'',})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <CustomForm onSubmit={this.handleAddContact}>\r\n                <Input type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={this.handleSetInfo}\r\n                />\r\n                <Input type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={this.handleSetInfo}\r\n                />\r\n                <Button type=\"submit\" text='Add contact' />\r\n            </CustomForm>\r\n        )\r\n    }\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactItem = styled.li`\r\n   display: flex;\r\n   justify-content: space-between;\r\n    &:not(:last-child){\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { ContactItem } from './ContactListItem.styled';\r\nimport Button from '../Button/Button';\r\n\r\nexport default function ContactListItem({name, number, handleDelete}) {\r\n    return (\r\n        <ContactItem>\r\n            {name} : {number}\r\n            <Button type=\"button\" text='delete' onClick={handleDelete}/>\r\n        </ContactItem>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    handleDelete: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nexport default function ContactList({contacts, onDeleteContact}) {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({id, name, number }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    name={name}\r\n                    number={number}\r\n                    handleDelete={()=>onDeleteContact(id)}\r\n                />\r\n            ))} \r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.number.isRequired,\r\n    })),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Container,\n  Title,\n  SectionTitle,\n} from './components/Container/Container.styled.jsx';\nimport Form from './components/Form/Form.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Input from './components/Input/Input.jsx';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandle = ({ name, number }) => {\n    const contact = { name, number, id: uuidv4() };\n\n    this.state.contacts.find(savedContact => savedContact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, contact],\n        }));\n    console.log(contact);\n  };\n\n  handleDelete = contactId => {\n    console.log(contactId);\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normaliseFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normaliseFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <Form handleSubmit={this.formSubmitHandle} />\n        <SectionTitle>Contacts</SectionTitle>\n        <Input\n          name=\"Find contacts by name\"\n          type=\"text\"\n          value={filter}\n          onChange={this.changeFilter}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.handleDelete}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}